services:
  frontend:
    build:
      context: ./invistaix-frontend
    container_name: invistaix-frontend
    ports:
      - "3000:5173"
    volumes:
      - ./invistaix-frontend:/app
      - /app/node_modules  # evita conflito entre host e container
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - backend
    networks:
      - invistaix-network

  backend:
    build:
      context: ./invistaix-backend
    container_name: invistaix-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/invistaix-db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL8Dialect
    depends_on:
      - mysql
    networks:
      - invistaix-network

  mysql:
    image: mysql:8.0
    container_name: invistaix-mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root123
      - MYSQL_DATABASE=invistaix-db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin123
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - invistaix-network

volumes:
  mysql_data:

networks:
  invistaix-network: